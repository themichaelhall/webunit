#!/usr/bin/env php
<?php
/**
 * This file is a part of the webunit package.
 *
 * Read more at https://github.com/themichaelhall/webunit
 */
declare(strict_types=1);

use DataTypes\Exceptions\FilePathInvalidArgumentException;
use DataTypes\FilePath;
use MichaelHall\Webunit\Parser\Parser;

foreach ([__DIR__ . '/../../../autoload.php', __DIR__ . '/../vendor/autoload.php'] as $autoload) {
    if (file_exists($autoload)) {
        /** @noinspection PhpIncludeInspection */
        require $autoload;

        break;
    }
}

if ($argc !== 2) {
    fail('Usage: webunit testfile', 1);
}

$filePath = null;
try {
    $filePath = FilePath::parse($argv[1]);
} catch (FilePathInvalidArgumentException $exception) {
    fail('Invalid file path "' . $argv[1] . '": ' . $exception->getMessage(), 2);
}

/** @noinspection PhpUsageOfSilenceOperatorInspection */
$content = @file($filePath->__toString());
if ($content === false) {
    fail('Could not open file "' . $filePath . '"', 2);
}

$parser = new Parser();
$parseResult = $parser->parse($filePath, $content);
if (!$parseResult->isSuccess()) {
    foreach ($parseResult->getParseErrors() as $parseError) {
        echo $parseError . PHP_EOL;
    }

    fail('Parsing failed', 3);
}

/**
 * Print out error text and exit.
 *
 * @param string $message    The message.
 * @param int    $returnCode The return code.
 */
function fail(string $message, int $returnCode): void
{
    echo "\033[41m\033[1;37m" . $message . "\033[0m" . PHP_EOL;
    exit($returnCode);
}
